#!/bin/env stest
<?php
#
# Sample Spartan Test
#
# spartan-test is just a php file
#


// every unidented line is considered as a test-expression
// line idented by 4 spaces is test result
// test result line is automatically generated
// if result line exists - it checked vs test-result
1+2;
    3;

1+2;  # test comment 24+34;
    3;

1+3;
    4;


/*
  line started with ";" is an expression
  expressions are executed, result is not tested
*/
; $a = "a";
$a.$a;
    "aa";

1 +
  2 +
  3;
    6;

3+3;
    6;

// multi line expressions - just use ident
; $a = 2 +
  3 + 5
    + 6
    +7;


// multi line expressions - just use ident, STest will auto-add missing ";"
; $a = 3 +
  3 +
   1 +
     5 +
      6;


$r;
    ["error"=>"NOTICE: Undefined variable: r"];

/* one line comment */

# This idented comments will automatically unindented
/* idented one line comment */
// idented comment
# idented comment


// stdout catching
print("aaa");
    [1, "$"=>"aaa"];

// Exception catching
; function ex() {
    throw new Exception("aaa");
  };

ex();
    ["Exception", "aaa"];

// result sorting
$r = ['b' => 2, 'c' => 3, 'a' => 1];
    ["a"=>1, "b"=>2, "c"=>3];
; $r['d'] = $r;
$r;
    ["a"=>1, "b"=>2, "c"=>3, "d"=>["a"=>1, "b"=>2, "c"=>3]];

; $ARG['sort'] = 0; // turn off result sorting;
$r = ['b' => 2, 'c' => 3, 'a' => 1];
    ["b"=>2, "c"=>3, "a"=>1];
; $r['d'] = $r;
$r;
    ["b"=>2, "c"=>3, "a"=>1, "d"=>["b"=>2, "c"=>3, "a"=>1]];

; $ARG['sort'] = 1; // restore default mode (result sorting);

# result escaping
"abc\"xx\"";
    "abc\"xx\"";

"abc\ndef\nghi";
    ~ "ghi";

# multi-line result set
"abc\ndef\nghi";
    "abc
    def
    ghi";

# multi-line test, multi-line result
"abc
  def
  ";
    "abc
      def
      ";
